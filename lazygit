#!/bin/sh

bold=$(tput bold)
normal=$(tput sgr0)

function lazygit
{
      echo "Lazygit running..."
      git add .
      git commit -a -m "$COMMIT_MESSAGE"
      git push origin "$REMOTE"
}

function terminate
{
    echo "\nExiting program. $arg1"
        exit 0;
}

function setup
{
    echo "Setting up lazygit..."
    sudo ln -fs "$(PWD)"/lazygit /usr/local/bin/lazygit
    if [ $? -eq 0 ]; then
        echo "Setup successful. You can now use 'lazygit' from anywhere."
        terminate 0
    else
        echo "Setup unsuccessful. See command preceding command output for details."
        terminate 1
    fi
}

function help
{
    echo "###################### ${bold}Lazygit usage ${normal}######################"
    echo "To symlink to /usr/local/bin (optional):"
    echo "    ${bold}lazygit setup"
    echo "${normal}Lazygit will ask if you want to setup. If you want to use 'setup' as your commit message, enter 'n'."
    echo ""
    echo "To git add current directory, commit with message, and push to remote:"
    echo "    ${bold}lazygit [commit message] [remote]"
    echo "${normal}Commit message cannot be blank. If remote is blank, lazygit will push to master."
    terminate 0
}


function commit_validation
{
  printf "No remote specified. Push to master? (y/n) > "
  read response
  if [ "$response" = "y" ]; then
      REMOTE = master
      lazygit "$COMMIT_MESSAGE" "$REMOTE"
      terminate 0
  else
      printf "Please enter the remote to push to: "
      read response
      if [ -z "$response" ]; then
          lazygit $response
      else
          printf "No remote specified."
          terminate 1
      fi
  fi
}
### Main

COMMIT_MESSAGE=$(echo "$@" | echo "$1")
REMOTE=$(echo "$@" | echo "$2")

response=

if [ "$COMMIT_MESSAGE" ]; then
    if [ "$COMMIT_MESSAGE" = "setup" ]; then
        printf "Setup lazygit? (y/n) > "
        read response
        if [ "$response" = "y" ]; then
            setup
        else
            printf "Do you want 'setup' as your commit message, then? (y/n) > "
            read response
            if [ "$response" = "y" && -z "$REMOTE"]; then
                commit_validation
            else
                terminate 1
            fi
        fi
    elif [ "$COMMIT_MESSAGE" = "help" ]; then
        help
    elif [ -z "$REMOTE" ]; then
        commit_validation
    else
	 lazygit "$COMMIT_MESSAGE" "$REMOTE"
    fi
else
    printf "No commands specified. Do you want to see lazygit usage? (y/n) > "
    read response
    if [ "$response" ]; then
        help
    else
        terminate 0
    fi
fi
